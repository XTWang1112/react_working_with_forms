{"ast":null,"code":"var _jsxFileName = \"/Users/xiaotongwang/Desktop/react_working_with_forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlur: nameBlur\n  } = useInput(value => value.trim() !== \"\");\n  // const nameInputRef = useRef();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const enteredEmailIsValid = enteredEmail.trim().match(validRegex) && enteredEmail.trim() !== \"\";\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlur = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlur = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlur,\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onBlur: emailInputBlur,\n        onChange: emailInputChangeHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is not valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"l6GfU/gxtrDUu9Om0zWoNYSdzHw=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlur","nameBlur","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","validRegex","enteredEmailIsValid","match","emailInputIsInvalid","formIsValid","emailInputChangeHandler","event","target","nameInputBlur","setEnteredNameTouched","emailInputBlur","formSubmitHandler","preventDefault","setEnteredName","nameInputClasses","nameInputIsInvalid","emailInputClasses","nameInputChangeHandler"],"sources":["/Users/xiaotongwang/Desktop/react_working_with_forms/src/components/SimpleInput.js"],"sourcesContent":["import {useState} from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlur: nameBlur,\n  } = useInput((value) => value.trim() !== \"\");\n  // const nameInputRef = useRef();\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const validRegex =\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n  const enteredEmailIsValid =\n    enteredEmail.trim().match(validRegex) && enteredEmail.trim() !== \"\";\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const emailInputChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlur = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlur = (event) => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onBlur={nameInputBlur}\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onBlur={emailInputBlur}\n          onChange={emailInputChangeHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">Email is not valid</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}